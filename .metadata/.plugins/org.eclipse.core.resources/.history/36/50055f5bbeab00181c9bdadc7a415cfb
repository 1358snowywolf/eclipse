//============================================================================
// Name        : Name.cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include <fstream>
#include <unordered_set>
#include <unordered_map>
#include <vector>
#include <string>

using namespace std;

class NameThatNumber{
public:
	vector<string> makeName(int serial_number, const string vtl[][3], unordered_set<string> correct_names){
		vector<string> official_names;
		string name = "";
		transform(serial_number, name, vtl);

		for(auto itl : names){
			if(correct_names.find(itl) != correct_names.end()){
				official_names.push_back(itl);
			}
		}

		return official_names;
	}

private:
	void transform(int serial_number, string name, const string vtl[][3]){
		if(serial_number <= 0){
			names.insert(name);
			return;
		}

		int digit = serial_number % 10;

		if(digit == 1 || digit == 0){
			names.clear();
			return;
		}

		serial_number = serial_number / 10;

		for(int i = 0; i < 3; i++){
			string backup = name;
			name = vtl[digit - 2][i + 1] + name;
			transform(serial_number, name, vtl);
			name = backup;
		}
	}

	unordered_set<string> names;
};

int main() {
//	ifstream fin ("namenum.in");
//	ifstream finn ("dict.txt");
//	ofstream fout ("namenum.out");
	int serial_number;
	string vtl[][3] = {
			{"A", "B", "C"},
			{"D", "E", "F"},
			{"G", "H", "I"},
			{"J", "K", "L"},
			{"M", "N", "O"},
			{"P", "R", "S"},
			{"T", "U", "V"},
			{"W", "X", "Y"}};
	unordered_set<string> correct_names;

	cout << "I'M HERE!   1" << endl;
//	fin >> serial_number;
	serial_number = 4734;

//	while(finn >> tmp){
//		correct_names.insert(tmp);
//	}

	NameThatNumber* ntn = new NameThatNumber();
	vector<string> vec = ntn->makeName(serial_number, vtl, correct_names);

	cout << "I'M HERE!   2" << endl;

//	for(int i = 0; i < (int) vec.size(); i++){
//		cout << vec[i] << endl;
//
//	}

	return 0;
}
